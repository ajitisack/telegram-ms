// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.23.4
// source: proto/telegram.proto

package tradebot

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	TelegramMessageService_SendTelegramMessage_FullMethodName = "/proto.TelegramMessageService/SendTelegramMessage"
)

// TelegramMessageServiceClient is the client API for TelegramMessageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TelegramMessageServiceClient interface {
	SendTelegramMessage(ctx context.Context, in *TelegramMessage, opts ...grpc.CallOption) (*TelegramMessageStatus, error)
}

type telegramMessageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTelegramMessageServiceClient(cc grpc.ClientConnInterface) TelegramMessageServiceClient {
	return &telegramMessageServiceClient{cc}
}

func (c *telegramMessageServiceClient) SendTelegramMessage(ctx context.Context, in *TelegramMessage, opts ...grpc.CallOption) (*TelegramMessageStatus, error) {
	out := new(TelegramMessageStatus)
	err := c.cc.Invoke(ctx, TelegramMessageService_SendTelegramMessage_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TelegramMessageServiceServer is the server API for TelegramMessageService service.
// All implementations must embed UnimplementedTelegramMessageServiceServer
// for forward compatibility
type TelegramMessageServiceServer interface {
	SendTelegramMessage(context.Context, *TelegramMessage) (*TelegramMessageStatus, error)
	mustEmbedUnimplementedTelegramMessageServiceServer()
}

// UnimplementedTelegramMessageServiceServer must be embedded to have forward compatible implementations.
type UnimplementedTelegramMessageServiceServer struct {
}

func (UnimplementedTelegramMessageServiceServer) SendTelegramMessage(context.Context, *TelegramMessage) (*TelegramMessageStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTelegramMessage not implemented")
}
func (UnimplementedTelegramMessageServiceServer) mustEmbedUnimplementedTelegramMessageServiceServer() {
}

// UnsafeTelegramMessageServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TelegramMessageServiceServer will
// result in compilation errors.
type UnsafeTelegramMessageServiceServer interface {
	mustEmbedUnimplementedTelegramMessageServiceServer()
}

func RegisterTelegramMessageServiceServer(s grpc.ServiceRegistrar, srv TelegramMessageServiceServer) {
	s.RegisterService(&TelegramMessageService_ServiceDesc, srv)
}

func _TelegramMessageService_SendTelegramMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TelegramMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelegramMessageServiceServer).SendTelegramMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TelegramMessageService_SendTelegramMessage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelegramMessageServiceServer).SendTelegramMessage(ctx, req.(*TelegramMessage))
	}
	return interceptor(ctx, in, info, handler)
}

// TelegramMessageService_ServiceDesc is the grpc.ServiceDesc for TelegramMessageService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TelegramMessageService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TelegramMessageService",
	HandlerType: (*TelegramMessageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendTelegramMessage",
			Handler:    _TelegramMessageService_SendTelegramMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/telegram.proto",
}
